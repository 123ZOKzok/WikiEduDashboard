/ rapidfire/question_groups/2/answer_groups/new
= form_for(Rapidfire::AnswerGroup.new,                                                                        |
  :url => rapidfire.question_group_answer_groups_path(question_group),                                        |
  :html => {'data-survey-form' => true, 'data-question-group' => question_group_index, tabindex: -1 }) do |f| |
  - group_index_data = results ? '' : question_group_index
  %div{"data-question-group-blocks" => ""}
  = group_index_data
  "&gt;
  - @answer_group_builder.answers.each_with_index do |answer, index|
    - question_presenter = RapidfireQuestionPresenter.new(answer, index: index, answer_group_builder: @answer_group_builder, is_results_view: results)
    - next if question_presenter.results_view?  question_presenter.text_only?
    - is_start_of_group = question_presenter.start_of_group?
    - is_end_of_group = question_presenter.end_of_group?
    - if is_start_of_group
      .block__container{"data-block-index" => ""}
      = index
      ' data-survey-index='#{}'&gt;
      .block.not-seen.disabled.survey__question--matrix
      = question_presenter.question_type
      "&gt;
    = f.fields_for(#{answer.question.id}, answer) do |answer_form|
      = render partial: rapidfire/answers/matrix_question_text, locals: {f: f, answer: answer, name: question_group.name}
      - if !question_presenter.grouped_question?
        .block__container
          #question_
          = answer.question.id
          " class="block disabled not-seen question-type--#{question_presenter.question_type}
          - if answer.errors.any?
            block--errors
          = question_presenter.required_class
          " data-survey-block="#{index + 1}"&gt;
        - if question_presenter.start_of_radio_matrix?
          .survey__question-row.first.matrix-row{"data-block-index" => ""}
          = index
          '&gt;
          \#{render_matrix_answer_labels(answer)}
      %div
      - if question_presenter.grouped_question?
        id="question_#{answer.question.id}"
      data-question-group="#{question_group_index}" class='survey__question-row #{question_presenter.grouped_question? ? 'matrix-row' : ''} #{index.even? ? '' : 'odd'}  #{is_end_of_group ? last :}#{question_presenter.required_class}' #{conditional_string(answer)}&gt;
      - if results
        = render partial: rapidfire/answers/question_text, locals: {f: answer_form, answer: answer}
        = render partial: question_results, locals: { question: answer.question }
      - else
        = render_answer_form_helper(answer, answer_form)
    / After single question or final grouped question
    - if is_end_of_group  !results
      - if question_presenter.follow_up_question?
        = render partial: rapidfire/answers/follow_up_question, locals: {f: answer_form, answer: answer }
      / Prev/Next/Submit
      .survey__block-nav
        %button.button.survey__prev.border{:tabindex => "-1"} Previous
        .survey__block-nav__next-container
          %div
          - if question_group_index + 1 == total  @answer_group_builder.answers.length == index + 1
            %button.button.dark{:tabindex => "-1"}>
            data-submit-survey data-no-validate&gt;Submit Survey
            %span.icon.icon-rt_arrow
        - else
          %button.button.survey__next.dark{:tabindex => "-1"}
            Next
            %span.icon.icon-rt_arrow
/ End of  fields_for
- if is_end_of_group
