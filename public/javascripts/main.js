(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
$(function() {
  var articleList, courseList, revisionList, userList;
  courseList = new List('courses', {
    valueNames: ['title', 'characters', 'views', 'students']
  });
  userList = new List('users', {
    valueNames: ['name', 'training', 'characters-ms', 'characters-us', 'edits']
  });
  articleList = new List('articles', {
    valueNames: ['title', 'characters', 'views']
  });
  revisionList = new List('revisions', {
    valueNames: ['title', 'date', 'characters', 'views']
  });
  $('select.cohorts').change(function(e) {
    var cohort;
    cohort = $('select.cohorts option:selected').val();
    return window.location = "/courses?cohort=" + encodeURIComponent(cohort);
  });
  return $('select.sorts').change(function(e) {
    var list;
    list = (function() {
      switch ($(this).attr('rel')) {
        case "courses":
          return courseList;
        case "users":
          return userList;
        case "articles":
          return articleList;
        case "revisions":
          return revisionList;
      }
    }).call(this);
    return list.sort($(this).val(), {
      order: $(this).children('option:selected').attr('rel')
    });
  });
});

$.fn.extend({
  toggleHeight: function() {
    return this.each(function() {
      var height;
      height = '0px';
      if ($(this).css('height') === void 0 || $(this).css('height') === '0px') {
        height = $(this).getContentHeight();
      }
      return $(this).css('height', height);
    });
  },
  getContentHeight: function() {
    var elem, height;
    elem = $(this).clone().css({
      "height": "auto",
      "display": "block"
    }).appendTo($(this).parent());
    height = elem.css("height");
    elem.remove();
    return height;
  }
});


},{}],2:[function(require,module,exports){
$(function() {
  require("./course.coffee");
  return require("./user.coffee");
});


},{"./course.coffee":1,"./user.coffee":3}],3:[function(require,module,exports){
$(function() {
  $('.drawer_trigger:not(.disabled)').click(function(e) {
    var drawer;
    drawer = $(e.target).parents('.row').children('.drawer');
    if ($(e.target).is('a')) {
      return;
    }
    $('.drawer').not(drawer).css('height', '0px');
    $('.row.open').not($(e.target).parents('.row')).removeClass('open');
    if (drawer.find('li').length === 0) {
      return $.ajax({
        url: drawer.attr("rel")
      }).done(function(data) {
        drawer.find('ul.list').append(data.html);
        drawer.toggleHeight();
        return $(e.target).parents('.row').toggleClass('open');
      });
    } else {
      drawer.toggleHeight();
      return $(e.target).parents('.row').toggleClass('open');
    }
  });
  return $('.drawer .view-all a').click(function(e) {
    var that;
    e.preventDefault();
    that = this;
    return $.ajax({
      url: $(this).attr("href")
    }).done(function(data) {
      var drawer;
      drawer = $(that).parents('.drawer');
      drawer.find('ul.list').append(data.html);
      $(that).parents('.view-all').remove();
      return drawer.css('height', drawer.getContentHeight());
    });
  });
});


},{}]},{},[2])
//# sourceMappingURL=data:application/json;base64,
