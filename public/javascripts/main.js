(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
$(function() {
  var articleList, courseList, revisionList, userList;
  courseList = new List('courses', {
    valueNames: ['title', 'characters', 'views', 'students']
  });
  userList = new List('users', {
    valueNames: ['name', 'training', 'characters-ms', 'characters-us', 'edits']
  });
  articleList = new List('articles', {
    valueNames: ['title', 'characters', 'views']
  });
  revisionList = new List('revisions', {
    valueNames: ['title', 'date', 'characters', 'views']
  });
  return $('.drawer_trigger').click(function(e) {
    var drawer;
    drawer = $(e.target).parents('.row').children('.drawer');
    $('.drawer').not(drawer).css('height', '0px');
    $('.row.open').not($(e.target).parents('.row')).removeClass('open');
    drawer.toggleHeight();
    return $(e.target).parents('.row').toggleClass('open');
  });
});

$.fn.extend({
  toggleHeight: function() {
    return this.each(function() {
      var height;
      height = '0px';
      if ($(this).css('height') === void 0 || $(this).css('height') === '0px') {
        height = $(this).getContentHeight();
      }
      return $(this).css('height', height);
    });
  },
  getContentHeight: function() {
    var elem, height;
    elem = $(this).clone().css({
      "height": "auto",
      "display": "block"
    }).appendTo($(this).parent());
    height = elem.css("height");
    elem.remove();
    return height;
  }
});


},{}],2:[function(require,module,exports){
$(function() {
  return require("./course.coffee");
});


},{"./course.coffee":1}]},{},[2])
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9uYXRlYmFpbGV5L0RldmVsb3BtZW50L1dpa2lFZHVEYXNoYm9hcmQvbm9kZV9tb2R1bGVzL2d1bHAtYnJvd3NlcmlmeS9ub2RlX21vZHVsZXMvYnJvd3NlcmlmeS9ub2RlX21vZHVsZXMvYnJvd3Nlci1wYWNrL19wcmVsdWRlLmpzIiwiL1VzZXJzL25hdGViYWlsZXkvRGV2ZWxvcG1lbnQvV2lraUVkdURhc2hib2FyZC9hcHAvYXNzZXRzL2phdmFzY3JpcHRzL2NvdXJzZS5jb2ZmZWUiLCIvVXNlcnMvbmF0ZWJhaWxleS9EZXZlbG9wbWVudC9XaWtpRWR1RGFzaGJvYXJkL2FwcC9hc3NldHMvamF2YXNjcmlwdHMvbWFpbi5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUNBQSxDQUFBLENBQUUsU0FBQSxHQUFBO0FBRUEsTUFBQSwrQ0FBQTtBQUFBLEVBQUEsVUFBQSxHQUFpQixJQUFBLElBQUEsQ0FBSyxTQUFMLEVBQWdCO0FBQUEsSUFBQyxVQUFBLEVBQVksQ0FBQyxPQUFELEVBQVMsWUFBVCxFQUFzQixPQUF0QixFQUE4QixVQUE5QixDQUFiO0dBQWhCLENBQWpCLENBQUE7QUFBQSxFQUdBLFFBQUEsR0FBZSxJQUFBLElBQUEsQ0FBSyxPQUFMLEVBQWM7QUFBQSxJQUFDLFVBQUEsRUFBWSxDQUFDLE1BQUQsRUFBUSxVQUFSLEVBQW1CLGVBQW5CLEVBQW9DLGVBQXBDLEVBQXFELE9BQXJELENBQWI7R0FBZCxDQUhmLENBQUE7QUFBQSxFQU1BLFdBQUEsR0FBa0IsSUFBQSxJQUFBLENBQUssVUFBTCxFQUFpQjtBQUFBLElBQUMsVUFBQSxFQUFZLENBQUMsT0FBRCxFQUFTLFlBQVQsRUFBc0IsT0FBdEIsQ0FBYjtHQUFqQixDQU5sQixDQUFBO0FBQUEsRUFTQSxZQUFBLEdBQW1CLElBQUEsSUFBQSxDQUFLLFdBQUwsRUFBa0I7QUFBQSxJQUFDLFVBQUEsRUFBWSxDQUFDLE9BQUQsRUFBVSxNQUFWLEVBQWtCLFlBQWxCLEVBQWdDLE9BQWhDLENBQWI7R0FBbEIsQ0FUbkIsQ0FBQTtTQVlBLENBQUEsQ0FBRSxpQkFBRixDQUFvQixDQUFDLEtBQXJCLENBQTJCLFNBQUMsQ0FBRCxHQUFBO0FBQ3pCLFFBQUEsTUFBQTtBQUFBLElBQUEsTUFBQSxHQUFTLENBQUEsQ0FBRSxDQUFDLENBQUMsTUFBSixDQUFXLENBQUMsT0FBWixDQUFvQixNQUFwQixDQUEyQixDQUFDLFFBQTVCLENBQXFDLFNBQXJDLENBQVQsQ0FBQTtBQUFBLElBRUEsQ0FBQSxDQUFFLFNBQUYsQ0FBWSxDQUFDLEdBQWIsQ0FBaUIsTUFBakIsQ0FBd0IsQ0FBQyxHQUF6QixDQUE2QixRQUE3QixFQUF1QyxLQUF2QyxDQUZBLENBQUE7QUFBQSxJQUdBLENBQUEsQ0FBRSxXQUFGLENBQWMsQ0FBQyxHQUFmLENBQW1CLENBQUEsQ0FBRSxDQUFDLENBQUMsTUFBSixDQUFXLENBQUMsT0FBWixDQUFvQixNQUFwQixDQUFuQixDQUErQyxDQUFDLFdBQWhELENBQTRELE1BQTVELENBSEEsQ0FBQTtBQUFBLElBS0EsTUFBTSxDQUFDLFlBQVAsQ0FBQSxDQUxBLENBQUE7V0FNQSxDQUFBLENBQUUsQ0FBQyxDQUFDLE1BQUosQ0FBVyxDQUFDLE9BQVosQ0FBb0IsTUFBcEIsQ0FBMkIsQ0FBQyxXQUE1QixDQUF3QyxNQUF4QyxFQVB5QjtFQUFBLENBQTNCLEVBZEE7QUFBQSxDQUFGLENBQUEsQ0FBQTs7QUFBQSxDQXVCQyxDQUFDLEVBQUUsQ0FBQyxNQUFMLENBQ0U7QUFBQSxFQUFBLFlBQUEsRUFBYyxTQUFBLEdBQUE7QUFDWixXQUFPLElBQUMsQ0FBQSxJQUFELENBQU0sU0FBQSxHQUFBO0FBQ1gsVUFBQSxNQUFBO0FBQUEsTUFBQSxNQUFBLEdBQVMsS0FBVCxDQUFBO0FBQ0EsTUFBQSxJQUFHLENBQUEsQ0FBRSxJQUFGLENBQUksQ0FBQyxHQUFMLENBQVMsUUFBVCxDQUFBLEtBQXNCLE1BQXRCLElBQW1DLENBQUEsQ0FBRSxJQUFGLENBQUksQ0FBQyxHQUFMLENBQVMsUUFBVCxDQUFBLEtBQXNCLEtBQTVEO0FBQ0UsUUFBQSxNQUFBLEdBQVMsQ0FBQSxDQUFFLElBQUYsQ0FBSSxDQUFDLGdCQUFMLENBQUEsQ0FBVCxDQURGO09BREE7YUFHQSxDQUFBLENBQUUsSUFBRixDQUFJLENBQUMsR0FBTCxDQUFTLFFBQVQsRUFBbUIsTUFBbkIsRUFKVztJQUFBLENBQU4sQ0FBUCxDQURZO0VBQUEsQ0FBZDtBQUFBLEVBT0EsZ0JBQUEsRUFBa0IsU0FBQSxHQUFBO0FBQ2hCLFFBQUEsWUFBQTtBQUFBLElBQUEsSUFBQSxHQUFPLENBQUEsQ0FBRSxJQUFGLENBQUksQ0FBQyxLQUFMLENBQUEsQ0FBWSxDQUFDLEdBQWIsQ0FDTDtBQUFBLE1BQUEsUUFBQSxFQUFTLE1BQVQ7QUFBQSxNQUNBLFNBQUEsRUFBVSxPQURWO0tBREssQ0FHTixDQUFDLFFBSEssQ0FHSSxDQUFBLENBQUUsSUFBRixDQUFJLENBQUMsTUFBTCxDQUFBLENBSEosQ0FBUCxDQUFBO0FBQUEsSUFJQSxNQUFBLEdBQVMsSUFBSSxDQUFDLEdBQUwsQ0FBUyxRQUFULENBSlQsQ0FBQTtBQUFBLElBS0EsSUFBSSxDQUFDLE1BQUwsQ0FBQSxDQUxBLENBQUE7QUFNQSxXQUFPLE1BQVAsQ0FQZ0I7RUFBQSxDQVBsQjtDQURGLENBdkJBLENBQUE7Ozs7QUNBQSxDQUFBLENBQUUsU0FBQSxHQUFBO1NBQ0EsT0FBQSxDQUFRLGlCQUFSLEVBREE7QUFBQSxDQUFGLENBQUEsQ0FBQSIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uIGUodCxuLHIpe2Z1bmN0aW9uIHMobyx1KXtpZighbltvXSl7aWYoIXRbb10pe3ZhciBhPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7aWYoIXUmJmEpcmV0dXJuIGEobywhMCk7aWYoaSlyZXR1cm4gaShvLCEwKTt0aHJvdyBuZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBtb2R1bGUgJ1wiK28rXCInXCIpfXZhciBmPW5bb109e2V4cG9ydHM6e319O3Rbb11bMF0uY2FsbChmLmV4cG9ydHMsZnVuY3Rpb24oZSl7dmFyIG49dFtvXVsxXVtlXTtyZXR1cm4gcyhuP246ZSl9LGYsZi5leHBvcnRzLGUsdCxuLHIpfXJldHVybiBuW29dLmV4cG9ydHN9dmFyIGk9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtmb3IodmFyIG89MDtvPHIubGVuZ3RoO28rKylzKHJbb10pO3JldHVybiBzfSkiLCIkIC0+XG4gICMgQ291cnNlIHNvcnRpbmdcbiAgY291cnNlTGlzdCA9IG5ldyBMaXN0KCdjb3Vyc2VzJywge3ZhbHVlTmFtZXM6IFsndGl0bGUnLCdjaGFyYWN0ZXJzJywndmlld3MnLCdzdHVkZW50cyddfSlcblxuICAjIFVzZXIgc29ydGluZ1xuICB1c2VyTGlzdCA9IG5ldyBMaXN0KCd1c2VycycsIHt2YWx1ZU5hbWVzOiBbJ25hbWUnLCd0cmFpbmluZycsJ2NoYXJhY3RlcnMtbXMnLCAnY2hhcmFjdGVycy11cycsICdlZGl0cyddfSlcblxuICAjIEFydGljbGUgc29ydGluZ1xuICBhcnRpY2xlTGlzdCA9IG5ldyBMaXN0KCdhcnRpY2xlcycsIHt2YWx1ZU5hbWVzOiBbJ3RpdGxlJywnY2hhcmFjdGVycycsJ3ZpZXdzJ119KVxuXG4gICMgUmV2aXNpb24gc29ydGluZ1xuICByZXZpc2lvbkxpc3QgPSBuZXcgTGlzdCgncmV2aXNpb25zJywge3ZhbHVlTmFtZXM6IFsndGl0bGUnLCAnZGF0ZScsICdjaGFyYWN0ZXJzJywgJ3ZpZXdzJ119KVxuXG4gICMgVXNlciBkZXRhaWwgZGlzcGxheVxuICAkKCcuZHJhd2VyX3RyaWdnZXInKS5jbGljayAoZSkgLT5cbiAgICBkcmF3ZXIgPSAkKGUudGFyZ2V0KS5wYXJlbnRzKCcucm93JykuY2hpbGRyZW4oJy5kcmF3ZXInKVxuXG4gICAgJCgnLmRyYXdlcicpLm5vdChkcmF3ZXIpLmNzcygnaGVpZ2h0JywgJzBweCcpXG4gICAgJCgnLnJvdy5vcGVuJykubm90KCQoZS50YXJnZXQpLnBhcmVudHMoJy5yb3cnKSkucmVtb3ZlQ2xhc3MoJ29wZW4nKVxuXG4gICAgZHJhd2VyLnRvZ2dsZUhlaWdodCgpXG4gICAgJChlLnRhcmdldCkucGFyZW50cygnLnJvdycpLnRvZ2dsZUNsYXNzKCdvcGVuJylcblxuJC5mbi5leHRlbmRcbiAgdG9nZ2xlSGVpZ2h0OiAtPlxuICAgIHJldHVybiBAZWFjaCAtPlxuICAgICAgaGVpZ2h0ID0gJzBweCdcbiAgICAgIGlmICQoQCkuY3NzKCdoZWlnaHQnKSA9PSB1bmRlZmluZWQgfHwgJChAKS5jc3MoJ2hlaWdodCcpID09ICcwcHgnXG4gICAgICAgIGhlaWdodCA9ICQoQCkuZ2V0Q29udGVudEhlaWdodCgpXG4gICAgICAkKEApLmNzcygnaGVpZ2h0JywgaGVpZ2h0KVxuXG4gIGdldENvbnRlbnRIZWlnaHQ6IC0+XG4gICAgZWxlbSA9ICQoQCkuY2xvbmUoKS5jc3MoXG4gICAgICBcImhlaWdodFwiOlwiYXV0b1wiXG4gICAgICBcImRpc3BsYXlcIjpcImJsb2NrXCJcbiAgICApLmFwcGVuZFRvKCQoQCkucGFyZW50KCkpXG4gICAgaGVpZ2h0ID0gZWxlbS5jc3MoXCJoZWlnaHRcIilcbiAgICBlbGVtLnJlbW92ZSgpXG4gICAgcmV0dXJuIGhlaWdodCIsIiQgLT5cbiAgcmVxdWlyZShcIi4vY291cnNlLmNvZmZlZVwiKSJdfQ==
