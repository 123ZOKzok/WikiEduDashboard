/*
 * This is a manifest file that'll be compiled into application.css, which will include all the files
 * listed below.
 *
 * Any CSS and SCSS file within this directory, lib/assets/stylesheets, vendor/assets/stylesheets,
 * or vendor/assets/stylesheets of plugins, if any, can be referenced here using a relative path.
 *
 * You're free to add application-wide styles to this file and they'll appear at the bottom of the
 * compiled file so the styles you add here take precedence over styles defined in any styles
 * defined in the other CSS/SCSS files in this directory. It is generally better to create a new
 * file per style scope.
 *
 *= require_tree .
 *= require_self
 */
html,
body,
div,
span,
applet,
object,
iframe,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
a,
abbr,
acronym,
address,
big,
cite,
code,
del,
dfn,
em,
img,
ins,
kbd,
q,
s,
samp,
small,
strike,
strong,
sub,
sup,
tt,
var,
b,
u,
i,
center,
dl,
dt,
dd,
ol,
ul,
li,
fieldset,
form,
label,
legend,
table,
caption,
tbody,
tfoot,
thead,
tr,
th,
td,
article,
aside,
canvas,
details,
embed,
figure,
figcaption,
footer,
header,
hgroup,
menu,
nav,
output,
ruby,
section,
summary,
time,
mark,
audio,
video {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section {
  display: block;
}
body {
  line-height: 1;
}
ol,
ul {
  list-style: none;
}
blockquote,
q {
  quotes: none;
}
blockquote:before,
blockquote:after,
q:before,
q:after {
  content: '';
  content: none;
}
table {
  border-collapse: collapse;
  border-spacing: 0;
}
img {
  max-width: 100%;
}
input,
textarea {
  -webkit-appearance: none;
  -webkit-border-radius: 0;
}

/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9hc3NldHMvc3R5bGVzaGVldHMvbWFpbi5zdHlsIiwiYXBwL2Fzc2V0cy9zdHlsZXNoZWV0cy9fcmVzZXQuc3R5bCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0FDS0E7QUFBTTtBQUFNO0FBQUs7QUFBTTtBQUFRO0FBQVE7QUFBTztBQUNLO0FBQUk7QUFBSTtBQUFJO0FBQUk7QUFBSTtBQUFHO0FBQVk7QUFBSTtBQUNJO0FBQU07QUFBUztBQUFTO0FBQUs7QUFBTTtBQUFLO0FBQ007QUFBSztBQUFJO0FBQUs7QUFBSztBQUFLO0FBQUc7QUFBRztBQUFLO0FBQ1E7QUFBUTtBQUFRO0FBQUs7QUFBSztBQUFJO0FBQUk7QUFDSTtBQUFHO0FBQUc7QUFBTztBQUNLO0FBQUk7QUFBSTtBQUFJO0FBQUk7QUFBRztBQUNXO0FBQU07QUFBTztBQUFPO0FBQ1E7QUFBUztBQUFPO0FBQU87QUFBTztBQUFJO0FBQUk7QUFBRztBQUNVO0FBQU87QUFBUTtBQUFTO0FBQU07QUFDUztBQUFZO0FBQVE7QUFBUTtBQUFPO0FBQ087QUFBSztBQUFRO0FBQU07QUFBUztBQUFRO0FBQ087QUFBTTtBQUFPO0VBQ25lLFlBQVksV0FBWjtFQUNBLFFBQVEsRUFBUjtFQUNBLFNBQVMsRUFBVDtFQUNBLFFBQVEsRUFBUjtFQUNBLFdBQVcsS0FBWDtFQUNBLE1BQU0sUUFBTjtFQUNBLGdCQUFnQixTQUFoQjs7QUFHRjtBQUFTO0FBQU87QUFBUztBQUFZO0FBQU87QUFDUztBQUFRO0FBQVE7QUFBTTtBQUFLO0VBQzlFLFNBQVMsTUFBVDs7QUFFRjtFQUNFLGFBQWEsRUFBYjs7QUFFRjtBQUFJO0VBQ0YsWUFBWSxLQUFaOztBQUVGO0FBQVk7RUFDVixRQUFRLEtBQVI7O0FBRUY7QUFBbUI7QUFBaUI7QUFDVztFQUM3QyxTQUFTLEdBQVQ7RUFDQSxTQUFTLEtBQVQ7O0FBRUY7RUFDRSxpQkFBaUIsU0FBakI7RUFDQSxnQkFBZ0IsRUFBaEI7O0FBSUY7RUFDRSxXQUFXLEtBQVg7O0FBRUY7QUFBTztFQUNMLG9CQUFvQixLQUFwQjtFQUNBLHVCQUF1QixFQUF2QiIsImZpbGUiOiJtYWluLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBUaGlzIGlzIGEgbWFuaWZlc3QgZmlsZSB0aGF0J2xsIGJlIGNvbXBpbGVkIGludG8gYXBwbGljYXRpb24uY3NzLCB3aGljaCB3aWxsIGluY2x1ZGUgYWxsIHRoZSBmaWxlc1xuICogbGlzdGVkIGJlbG93LlxuICpcbiAqIEFueSBDU1MgYW5kIFNDU1MgZmlsZSB3aXRoaW4gdGhpcyBkaXJlY3RvcnksIGxpYi9hc3NldHMvc3R5bGVzaGVldHMsIHZlbmRvci9hc3NldHMvc3R5bGVzaGVldHMsXG4gKiBvciB2ZW5kb3IvYXNzZXRzL3N0eWxlc2hlZXRzIG9mIHBsdWdpbnMsIGlmIGFueSwgY2FuIGJlIHJlZmVyZW5jZWQgaGVyZSB1c2luZyBhIHJlbGF0aXZlIHBhdGguXG4gKlxuICogWW91J3JlIGZyZWUgdG8gYWRkIGFwcGxpY2F0aW9uLXdpZGUgc3R5bGVzIHRvIHRoaXMgZmlsZSBhbmQgdGhleSdsbCBhcHBlYXIgYXQgdGhlIGJvdHRvbSBvZiB0aGVcbiAqIGNvbXBpbGVkIGZpbGUgc28gdGhlIHN0eWxlcyB5b3UgYWRkIGhlcmUgdGFrZSBwcmVjZWRlbmNlIG92ZXIgc3R5bGVzIGRlZmluZWQgaW4gYW55IHN0eWxlc1xuICogZGVmaW5lZCBpbiB0aGUgb3RoZXIgQ1NTL1NDU1MgZmlsZXMgaW4gdGhpcyBkaXJlY3RvcnkuIEl0IGlzIGdlbmVyYWxseSBiZXR0ZXIgdG8gY3JlYXRlIGEgbmV3XG4gKiBmaWxlIHBlciBzdHlsZSBzY29wZS5cbiAqXG4gKj0gcmVxdWlyZV90cmVlIC5cbiAqPSByZXF1aXJlX3NlbGZcbiAqL1xuXG5cbkBpbXBvcnQgXCJfcmVzZXRcIjsiLCIvKiBodHRwOi8vbWV5ZXJ3ZWIuY29tL2VyaWMvdG9vbHMvY3NzL3Jlc2V0LyBcbiAgIHYyLjAgfCAyMDExMDEyNlxuICAgTGljZW5zZTogbm9uZSAocHVibGljIGRvbWFpbilcbiovXG5cbmh0bWwsIGJvZHksIGRpdiwgc3BhbiwgYXBwbGV0LCBvYmplY3QsIGlmcmFtZSxcbmgxLCBoMiwgaDMsIGg0LCBoNSwgaDYsIHAsIGJsb2NrcXVvdGUsIHByZSxcbmEsIGFiYnIsIGFjcm9ueW0sIGFkZHJlc3MsIGJpZywgY2l0ZSwgY29kZSxcbmRlbCwgZGZuLCBlbSwgaW1nLCBpbnMsIGtiZCwgcSwgcywgc2FtcCxcbnNtYWxsLCBzdHJpa2UsIHN0cm9uZywgc3ViLCBzdXAsIHR0LCB2YXIsXG5iLCB1LCBpLCBjZW50ZXIsXG5kbCwgZHQsIGRkLCBvbCwgdWwsIGxpLFxuZmllbGRzZXQsIGZvcm0sIGxhYmVsLCBsZWdlbmQsXG50YWJsZSwgY2FwdGlvbiwgdGJvZHksIHRmb290LCB0aGVhZCwgdHIsIHRoLCB0ZCxcbmFydGljbGUsIGFzaWRlLCBjYW52YXMsIGRldGFpbHMsIGVtYmVkLCBcbmZpZ3VyZSwgZmlnY2FwdGlvbiwgZm9vdGVyLCBoZWFkZXIsIGhncm91cCwgXG5tZW51LCBuYXYsIG91dHB1dCwgcnVieSwgc2VjdGlvbiwgc3VtbWFyeSxcbnRpbWUsIG1hcmssIGF1ZGlvLCB2aWRlbyB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IC8vIEFkZGVkIGJ5IE5EQlxuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG4gIGJvcmRlcjogMDtcbiAgZm9udC1zaXplOiAxMDAlO1xuICBmb250OiBpbmhlcml0O1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG4vKiBIVE1MNSBkaXNwbGF5LXJvbGUgcmVzZXQgZm9yIG9sZGVyIGJyb3dzZXJzICovXG5hcnRpY2xlLCBhc2lkZSwgZGV0YWlscywgZmlnY2FwdGlvbiwgZmlndXJlLCBcbmZvb3RlciwgaGVhZGVyLCBoZ3JvdXAsIG1lbnUsIG5hdiwgc2VjdGlvbiB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuYm9keSB7XG4gIGxpbmUtaGVpZ2h0OiAxO1xufVxub2wsIHVsIHtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbn1cbmJsb2NrcXVvdGUsIHEge1xuICBxdW90ZXM6IG5vbmU7XG59XG5ibG9ja3F1b3RlOmJlZm9yZSwgYmxvY2txdW90ZTphZnRlcixcbnE6YmVmb3JlLCBxOmFmdGVyIHtcbiAgY29udGVudDogJyc7XG4gIGNvbnRlbnQ6IG5vbmU7XG59XG50YWJsZSB7XG4gIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XG4gIGJvcmRlci1zcGFjaW5nOiAwO1xufVxuXG4vLyBBZGRlZCBieSBOREJcbmltZyB7XG4gIG1heC13aWR0aDogMTAwJTtcbn1cbmlucHV0LCB0ZXh0YXJlYSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbiAgLXdlYmtpdC1ib3JkZXItcmFkaXVzOiAwO1xufSJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ== */